(()=>{"use strict";class t{constructor(){this.timestamps=[],this.uploadData=[],this.downloadData=[],this.MAX_DATA_POINTS=60,this.vscode=acquireVsCodeApi(),this.initializeChart(),this.setupMessageListener()}formatBytes(t,a=2){if(0===t)return"0 B";const e=a<0?0:a,s=Math.floor(Math.log(t)/Math.log(1024));return parseFloat((t/Math.pow(1024,s)).toFixed(e))+" "+["B","KB","MB","GB","TB"][s]}formatBps(t){return this.formatBytes(t)+"/s"}initializeChart(){const t=getComputedStyle(document.body),a=t.getPropertyValue("--vscode-editor-foreground")||"#cccccc",e=t.getPropertyValue("--vscode-panel-border")||"#2d2d30",s=document.getElementById("bandwidthChart").getContext("2d");this.bandwidthChart=new Chart(s,{type:"line",data:{labels:this.timestamps,datasets:[{label:"Upload",data:this.uploadData,borderColor:"#4CAF50",backgroundColor:"rgba(76, 175, 80, 0.1)",fill:!0,tension:.4},{label:"Download",data:this.downloadData,borderColor:"#2196F3",backgroundColor:"rgba(33, 150, 243, 0.1)",fill:!0,tension:.4}]},options:{responsive:!0,maintainAspectRatio:!1,interaction:{mode:"index",intersect:!1},plugins:{legend:{labels:{color:a}},tooltip:{callbacks:{label:t=>t.dataset.label+": "+this.formatBps(t.parsed.y)}}},scales:{x:{display:!0,grid:{color:e},ticks:{color:a,maxRotation:45,minRotation:0,autoSkip:!0,autoSkipPadding:15,maxTicksLimit:6,callback:function(t){const a=this.getLabelForValue(t);if(!a)return"";const e=a.split(":");return 3===e.length?e[1]+":"+e[2]:a}}},y:{display:!0,grid:{color:e},ticks:{color:a,callback:t=>this.formatBps(t)}}}}})}updateData(t){const a=new Date(t.timestamp).toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"});this.timestamps.push(a),this.uploadData.push(t.upBps),this.downloadData.push(t.downBps),this.timestamps.length>this.MAX_DATA_POINTS&&(this.timestamps.shift(),this.uploadData.shift(),this.downloadData.shift()),this.updateStats(t),this.bandwidthChart.update("none")}updateStats(t){document.getElementById("uploadSpeed").textContent=this.formatBps(t.upBps),document.getElementById("downloadSpeed").textContent=this.formatBps(t.downBps)}setupMessageListener(){window.addEventListener("message",(t=>{const a=t.data;switch(a.type){case"update":this.updateData(a.data);break;case"history":a.data.forEach((t=>{this.updateData(t)}))}}))}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>new t)):new t})();